{% set data = load_setup_py_data() %}

package:
  name: conda-project
  version: {{ data.get('version') }}

source:
  path: ../

build:
  number: 0
  noarch: python
  script: pip install . --no-deps --ignore-installed --no-cache-dir
  entry_points:
    - conda-project = anaconda_project.cli:main
  script_env:
    - COVERAGE_DIR

requirements:
  host:
    - python {{ python }}
    - pip

  run:
    - anaconda-client
    - conda-pack
    - python
    - requests
    - ruamel_yaml
    - tornado >=4.2
    - jinja2
    - tqdm

test:
  requires:
    - backports.tempfile # [py2k]
    - coverage
    - pytest<5
    - pytest-cov
    - redis
    - notebook
    - bokeh
    - psutil
    - keyring
    - setuptools
    - pip

  source_files:
    - .coveragerc

  commands:
    # In the conda ecosystem, setuptools has been patched to prevent downloads
    # in conda build sessions, as indicated by the existence of the CONDA_BUILD
    # environment variable. But we need to allow this---during testing at least.
    - unset CONDA_BUILD # [not win]
    - set CONDA_BUILD= # [win]
    # conda build also double-activates the test environment, which confuses
    # conda's own activate/deactivate scripts when executed from within. What
    # we want is a properly activated test environment and nothing else. The
    # test this impacts is relaxed on Windows, so this is only needed for Unix.
    - export PATH="$PREFIX/bin:"$(echo $PATH | sed "s@$PREFIX[^:]*:@@g;s@$(dirname $CONDA_EXE):@@g") # [not win]
    # The warnings for Python 2.7 are pretty extensive, so let's not print them in CI
    - python -m pytest --pyargs -v -rfe --durations=10
          --cov-config .coveragerc --cov-report term-missing --no-cov-on-fail
          --cov-fail-under=99 --cov-report html$COVERAGE_DIR # [not win]
          --cov-fail-under=98 --cov-report html%COVERAGE_DIR% # [win]
          --cov anaconda_project anaconda_project

about:
  home: https://github.com/Anaconda-Platform/anaconda-project
  license: BSD 3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: Tool for encapsulating, running, and reproducing data science projects
  description: |
    By adding an anaconda-project.yml to a project directory, a single 
    anaconda-project run command will be able to set up all dependencies 
    and then launch the project.
  doc_url: http://anaconda-project.readthedocs.io
  dev_url: https://github.com/Anaconda-Platform/anaconda-project
